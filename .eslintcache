[{"C:\\Users\\Prashant\\Desktop\\shopApp\\src\\index.js":"1","C:\\Users\\Prashant\\Desktop\\shopApp\\src\\App.js":"2","C:\\Users\\Prashant\\Desktop\\shopApp\\src\\reportWebVitals.js":"3","C:\\Users\\Prashant\\Desktop\\shopApp\\src\\components\\shoppies\\shoppies.js":"4","C:\\Users\\Prashant\\Desktop\\shopApp\\src\\components\\displayMovies\\displayMovies.js":"5"},{"size":583,"mtime":1608259693977,"results":"6","hashOfConfig":"7"},{"size":528,"mtime":1608178268560,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":1608178268560,"results":"9","hashOfConfig":"7"},{"size":2562,"mtime":1608567933794,"results":"10","hashOfConfig":"7"},{"size":13384,"mtime":1608528420322,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"12em0du",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"14"},"C:\\Users\\Prashant\\Desktop\\shopApp\\src\\index.js",[],["24","25"],"C:\\Users\\Prashant\\Desktop\\shopApp\\src\\App.js",[],"C:\\Users\\Prashant\\Desktop\\shopApp\\src\\reportWebVitals.js",[],"C:\\Users\\Prashant\\Desktop\\shopApp\\src\\components\\shoppies\\shoppies.js",[],"C:\\Users\\Prashant\\Desktop\\shopApp\\src\\components\\displayMovies\\displayMovies.js",["26","27","28","29","30"],"import React, { Component } from 'react'\r\nimport './displayMovies.css'\r\nimport loading from '../../assets/loading.gif'\r\n\r\nlet nomIndexes = [];\r\nlet nomMovies = [];\r\nlet search;\r\n\r\nclass DisplayMovies extends Component {\r\n    constructor(props) {\r\n\r\n        super(props);\r\n        this.state = {\r\n            nomOne: null,\r\n            nomTwo: null,\r\n            nomThree: null,\r\n            nomFour: null,\r\n            nomFive: null,\r\n            alreadyExists: false,\r\n            showPoster: false,\r\n        }\r\n        this.handleNomChange = this.handleNomChange.bind(this);\r\n        this.handleNomRemove = this.handleNomRemove.bind(this);\r\n        this.handleToggle = this.handleToggle.bind(this);\r\n        this.handleClearNoms = this.handleClearNoms.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        search = this.props.lowerCaseSearch;\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (search !== this.props.lowerCaseSearch) {\r\n            search = this.props.lowerCaseSearch;\r\n            nomIndexes = [];\r\n        }\r\n    }\r\n\r\n    handleNomChange(event) {\r\n        if (!this.state.nomOne && nomMovies.includes(event.target.value) == false) {\r\n            this.setState({ nomOne: { key: event.target.value, index: event.target.id, query: search } });\r\n            nomIndexes.push(event.target.id);\r\n            nomMovies.push(event.target.value);\r\n            this.setState({ alreadyExists: false });\r\n        }\r\n        else if (!this.state.nomTwo && nomMovies.includes(event.target.value) == false) {\r\n            this.setState({ nomTwo: { key: event.target.value, index: event.target.id, query: search } });\r\n            nomIndexes.push(event.target.id);\r\n            nomMovies.push(event.target.value);\r\n            this.setState({ alreadyExists: false });\r\n        }\r\n        else if (!this.state.nomThree && nomMovies.includes(event.target.value) == false) {\r\n            this.setState({ nomThree: { key: event.target.value, index: event.target.id, query: search } });\r\n            nomIndexes.push(event.target.id);\r\n            nomMovies.push(event.target.value);\r\n            this.setState({ alreadyExists: false });\r\n        }\r\n        else if (!this.state.nomFour && nomMovies.includes(event.target.value) == false) {\r\n            this.setState({ nomFour: { key: event.target.value, index: event.target.id, query: search } });\r\n            nomIndexes.push(event.target.id);\r\n            nomMovies.push(event.target.value);\r\n            this.setState({ alreadyExists: false });\r\n        }\r\n        else if (!this.state.nomFive && nomMovies.includes(event.target.value) == false) {\r\n            this.setState({ nomFive: { key: event.target.value, index: event.target.id, query: search } });\r\n            nomIndexes.push(event.target.id);\r\n            nomMovies.push(event.target.value);\r\n            this.setState({ alreadyExists: false });\r\n        }\r\n        else if (nomMovies.includes(event.target.value)) {\r\n            this.setState({ alreadyExists: true });\r\n            nomIndexes.push(event.target.id);\r\n        }\r\n        else {\r\n            this.setState({ alreadyExists: false });\r\n        }\r\n    }\r\n\r\n    handleNomRemove(event) {\r\n        let tempQuery;\r\n        let tempSearch;\r\n\r\n        if (this.state.nomOne && event.target.value === this.state.nomOne.key) {\r\n            tempQuery = this.state.nomOne.query.length.toString();\r\n            tempSearch = search.length.toString();\r\n            if (search === this.state.nomOne.query && tempSearch.includes(tempQuery)) {\r\n                if (nomIndexes.indexOf(this.state.nomOne.index) > -1) {\r\n                    nomIndexes.splice(nomIndexes.indexOf(this.state.nomOne.index), 1);\r\n                }\r\n            }\r\n            this.setState({ nomOne: null });\r\n            nomMovies.splice(nomMovies.indexOf(event.target.value), 1);\r\n        }\r\n        else if (this.state.nomTwo && event.target.value === this.state.nomTwo.key) {\r\n            tempQuery = this.state.nomTwo.query.length.toString();\r\n            tempSearch = search.length.toString();\r\n            if (search === this.state.nomTwo.query && tempSearch.includes(tempQuery)) {\r\n                if (nomIndexes.indexOf(this.state.nomTwo.index) > -1) {\r\n                    nomIndexes.splice(nomIndexes.indexOf(this.state.nomTwo.index), 1);\r\n                }\r\n            }\r\n            this.setState({ nomTwo: null });\r\n            nomMovies.splice(nomMovies.indexOf(event.target.value), 1);\r\n        }\r\n        else if (this.state.nomThree && event.target.value === this.state.nomThree.key) {\r\n            tempQuery = this.state.nomThree.query.length.toString();\r\n            tempSearch = search.length.toString();\r\n            if (search === this.state.nomThree.query && tempSearch.includes(tempQuery)) {\r\n                if (nomIndexes.indexOf(this.state.nomThree.index) > -1) {\r\n                    nomIndexes.splice(nomIndexes.indexOf(this.state.nomThree.index), 1);\r\n                }\r\n            }\r\n            this.setState({ nomThree: null });\r\n            nomMovies.splice(nomMovies.indexOf(event.target.value), 1);\r\n        }\r\n        else if (this.state.nomFour && event.target.value === this.state.nomFour.key) {\r\n            tempQuery = this.state.nomFour.query.length.toString();\r\n            tempSearch = search.length.toString();\r\n            if (search === this.state.nomFour.query && tempSearch.includes(tempQuery)) {\r\n                if (nomIndexes.indexOf(this.state.nomFour.index) > -1) {\r\n                    nomIndexes.splice(nomIndexes.indexOf(this.state.nomFour.index), 1);\r\n                }\r\n            }\r\n            this.setState({ nomFour: null });\r\n            nomMovies.splice(nomMovies.indexOf(event.target.value), 1);\r\n        }\r\n        else if (this.state.nomFive && event.target.value === this.state.nomFive.key) {\r\n            tempQuery = this.state.nomFive.query.length.toString();\r\n            tempSearch = search.length.toString();\r\n            if (search === this.state.nomFive.query && tempSearch.includes(tempQuery)) {\r\n                if (nomIndexes.indexOf(this.state.nomFive.index) > -1) {\r\n                    nomIndexes.splice(nomIndexes.indexOf(this.state.nomFive.index), 1);\r\n                }\r\n            }\r\n            this.setState({ nomFive: null });\r\n            nomMovies.splice(nomMovies.indexOf(event.target.value), 1);\r\n        }\r\n        this.setState({ alreadyExists: false });\r\n    }\r\n\r\n    handleToggle() {\r\n        this.setState({ showPoster: !this.state.showPoster });\r\n    }\r\n\r\n    handleClearNoms() {\r\n        this.setState({ nomOne: null, nomTwo: null, nomThree: null, nomFour: null, nomFive: null, alreadyExists: false });\r\n        nomMovies = [];\r\n        nomIndexes = [];\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                {console.log(this.props.isLoading)}\r\n                <div class=\"d-flex flex-column\">\r\n                    <div class=\"card mb-2 pt-1\">\r\n                        <div class=\"d-flex justify-content-around\">\r\n                            <div class=\"m-2 p-1\">\r\n                                <h5>Options:</h5>\r\n                            </div>\r\n                            <div class=\"custom-control custom-switch m-2 p-2\">\r\n                                <input type=\"checkbox\" class=\"custom-control-input\" id=\"switchPoster\" onChange={this.handleToggle} />\r\n                                <label class=\"custom-control-label switch-align\" for=\"switchPoster\">Show posters</label>\r\n                            </div>\r\n                            <div class=\"m-2 p-1\">\r\n                                <button type=\"button\" class=\"btn btn-outline-secondary\" onClick={this.handleClearNoms}>Clear all nominations</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    {this.props.isLoading ?\r\n                        <div class=\"card d-flex justify-content-center bg-light text-center mb-2 p-2\">\r\n                        <div>\r\n                            <img class=\"loadingGIF\" src={loading} alt=\"loading...\" />\r\n                        </div>\r\n                    </div>\r\n                        : null}\r\n                    <div class=\"d-flex flex-row\">\r\n                        <div class=\"card pt-2 pl-2 pr-2 card-set-width\">\r\n                            <div class=\"card-body\">\r\n                                <div class=\"d-flex flex-row\">\r\n                                    <div>\r\n                                        <h5 class=\"card-title\">{this.props.searchTerm ? 'Results for \"' + this.props.searchTerm + '\"' : \"Results\"}</h5>\r\n                                    </div>\r\n                                </div>\r\n                                <ul class=\"list-group\">\r\n                                    {this.props.movies ? this.props.movies.map(\r\n                                        (movie, index) =>\r\n                                            nomIndexes.includes(index.toString()) ?\r\n                                                <li class=\"list-group-item list-group-item-light\" key={movie.Title}>\r\n                                                    <form class=\"d-flex flex-column m-1\">\r\n                                                        <h6>{movie.Title} ({movie.Year})</h6>\r\n                                                        {this.state.showPoster ? <img alt=\"\" src={movie.Poster} /> : null}\r\n                                                        <button type=\"button\" class=\"btn btn-secondary btn-set-width mt-2\" disabled={true}>Nominate</button>\r\n                                                    </form>\r\n                                                </li> :\r\n                                                <li class=\"list-group-item list-group-item-light\" key={movie.Title}>\r\n                                                    <form class=\"d-flex flex-column m-1\">\r\n                                                        <h6>{movie.Title} ({movie.Year})</h6>\r\n                                                        {this.state.showPoster ? <img alt=\"\" src={movie.Poster} /> : null}\r\n                                                        <button type=\"button\" class=\"btn btn-secondary btn-set-width mt-2\" id={index} value={movie.Title + \" (\" + movie.Year + \")\"} onClick={this.handleNomChange}>Nominate</button>\r\n                                                    </form>\r\n                                                </li>\r\n                                    ) :\r\n                                        <li class=\"list-group-item list-group-item-light\">\r\n                                            No results\r\n                                        </li>\r\n                                    }\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"pl-2\">\r\n                            <div class=\"d-flex flex-row\">\r\n                                <div class=\"card pt-2 pl-2 pr-2 card-set-width\">\r\n                                    <div class=\"card-body\">\r\n                                        <h5 class=\"card-title\">Nominations (Top 5)</h5>\r\n                                        {this.state.nomOne && this.state.nomTwo && this.state.nomThree && this.state.nomFour && this.state.nomFive ? <div class=\"alert alert-info\" role=\"alert\">\r\n                                            Nominations limit reached (Max 5)\r\n                            </div> : null}\r\n                                        {!this.state.alreadyExists ? null : <div class=\"alert alert-info\" role=\"alert\">\r\n                                            Nomination already exists\r\n                            </div>}\r\n                                        <ul class=\"list-group\">\r\n                                            {[this.state.nomOne, this.state.nomTwo, this.state.nomThree, this.state.nomFour, this.state.nomFive] ? [this.state.nomOne, this.state.nomTwo, this.state.nomThree, this.state.nomFour, this.state.nomFive].map(\r\n                                                (nom) =>\r\n                                                    nom ?\r\n                                                        <li class=\"list-group-item list-group-item-light\">\r\n                                                            <form class=\"d-flex flex-column m-1\">\r\n                                                                <p>{nom.key}</p>\r\n                                                                <button type=\"button\" class=\"btn btn-secondary btn-set-width\" value={nom.key} onClick={this.handleNomRemove}>Remove</button>\r\n                                                            </form>\r\n                                                        </li>\r\n                                                        : <li class=\"list-group-item list-group-item-light\">\r\n                                                            Choose a movie\r\n                                                </li>\r\n                                            ) : null}\r\n                                        </ul>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    };\r\n}\r\n\r\nexport default DisplayMovies;\r\n",{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","severity":1,"message":"36","line":40,"column":74,"nodeType":"37","messageId":"38","endLine":40,"endColumn":76},{"ruleId":"35","severity":1,"message":"36","line":46,"column":79,"nodeType":"37","messageId":"38","endLine":46,"endColumn":81},{"ruleId":"35","severity":1,"message":"36","line":52,"column":81,"nodeType":"37","messageId":"38","endLine":52,"endColumn":83},{"ruleId":"35","severity":1,"message":"36","line":58,"column":80,"nodeType":"37","messageId":"38","endLine":58,"endColumn":82},{"ruleId":"35","severity":1,"message":"36","line":64,"column":80,"nodeType":"37","messageId":"38","endLine":64,"endColumn":82},"no-native-reassign",["39"],"no-negated-in-lhs",["40"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]